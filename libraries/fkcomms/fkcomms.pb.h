/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Mon Jan 09 11:48:28 2017. */

#ifndef PB_FKCOMMS_FKCOMMS_PB_H_INCLUDED
#define PB_FKCOMMS_FKCOMMS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _fkcomms_Field_Type {
    fkcomms_Field_Type_I32 = 0,
    fkcomms_Field_Type_U32 = 1,
    fkcomms_Field_Type_FLOAT = 2
} fkcomms_Field_Type;
#define _fkcomms_Field_Type_MIN fkcomms_Field_Type_I32
#define _fkcomms_Field_Type_MAX fkcomms_Field_Type_FLOAT
#define _fkcomms_Field_Type_ARRAYSIZE ((fkcomms_Field_Type)(fkcomms_Field_Type_FLOAT+1))

/* Struct definitions */
typedef struct _fkcomms_Field {
    fkcomms_Field_Type type;
    int32_t i32;
    uint32_t u32;
    float f32;
/* @@protoc_insertion_point(struct:fkcomms_Field) */
} fkcomms_Field;

typedef struct _fkcomms_Message {
    uint32_t time;
    uint32_t id;
    pb_callback_t fields;
/* @@protoc_insertion_point(struct:fkcomms_Message) */
} fkcomms_Message;

/* Default values for struct fields */

/* Initializer values for message structs */
#define fkcomms_Field_init_default               {(fkcomms_Field_Type)0, 0, 0, 0}
#define fkcomms_Message_init_default             {0, 0, {{NULL}, NULL}}
#define fkcomms_Field_init_zero                  {(fkcomms_Field_Type)0, 0, 0, 0}
#define fkcomms_Message_init_zero                {0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define fkcomms_Field_type_tag                   1
#define fkcomms_Field_i32_tag                    2
#define fkcomms_Field_u32_tag                    3
#define fkcomms_Field_f32_tag                    4
#define fkcomms_Message_time_tag                 1
#define fkcomms_Message_id_tag                   2
#define fkcomms_Message_fields_tag               3

/* Struct field encoding specification for nanopb */
extern const pb_field_t fkcomms_Field_fields[5];
extern const pb_field_t fkcomms_Message_fields[4];

/* Maximum encoded size of messages (where known) */
#define fkcomms_Field_size                       24
/* fkcomms_Message_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FKCOMMS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
